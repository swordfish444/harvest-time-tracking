// Generated by CoffeeScript 1.3.3
(function() {
  var actionSelector,
    addButton,
    projectNameSelector,
    milestoneNameSelector,
    ticketIdSelector,
    ticketNameSelector,
    config,
    debug,
    findMilestoneName,
    findTicketDescription,
    findIds,
    findMatch,
    insertScript,
    isConfigLoaded,
    loadConfig,
    namespacedString,
    nsClass,
    nsEvent,
    nsId,
    orgname,
    sendMessage,
    setupButton;

  groupPattern = /^https:\/\/(\S+).codebasehq.com\/\S+$/;
  href = window.location.href;
  if (href.match(groupPattern) !== null) {
    orgArray = href.match(groupPattern);
    orgname = orgArray[1];
  }

  projectNameSelector = '#header .main h1 a';

  milestoneNameSelector = '#header .main h1 a';

  ticketIdSelector = '#sub-header h2';
  ticketNameSelector = 'body.tickets #content h2.Thread__subject';

  actionSelector = 'body.tickets .buttons';

  debug = false;

  isConfigLoaded = false;

  config = "window._harvestPlatformConfig = {"
    + "'applicationName': 'Codebase',"
    + "'permalink': 'https://" + orgname + ".codebasehq.com/projects/%PROJECT_ID%/tickets/%ITEM_ID%',"
    + "'skipStyling': true,"
    + "'debug': " + debug
    + " }";

  namespacedString = function(name) {
    return "harvest-" + name;
  };

  nsId = function(name) {
    return "#" + (namespacedString(name));
  };

  nsClass = function(name) {
    return "." + (namespacedString(name));
  };

  nsEvent = function(name) {
    return "" + (namespacedString('event')) + ":" + name;
  };

  sendMessage = function(options) {
    var div, event;
    if (options.element) {
      options.data['element'] = options.element[0];
    }
    event = document.createEvent('CustomEvent');
    event.initCustomEvent(nsEvent(options.type), true, true, options.data);
    div = $("" + (nsId('messaging'))).get(0);
    if (div) {
      return div.dispatchEvent(event);
    }
  };

  insertScript = function(callback) {
    var entry, script;
    script = document.createElement('script');
    script.type = 'text/javascript';
    script.async = true;
    script.innerHTML = config;
    entry = document.getElementsByTagName('script')[0];
    entry.parentNode.insertBefore(script, entry);
    if (script.addEventListener) {
      script.addEventListener('load', callback, false);
    } else {
      script.attachEvent('onreadystatechange', function() {
        if (/complete|loaded/.test(script.readyState)) {
          return callback();
        }
      });
    }
    return isConfigLoaded = true;
  };

  loadConfig = function() {
    var callback, host, url;
    host = debug ? 'harvestapp.dev' : 'platform.harvestapp.com';
    url = "//" + host + "/javascripts/generated/platform.js";
    callback = $.getScript(url);
    return insertScript(callback);
  };

  findMatch = function(pattern) {
    var href, matches;
    href = window.location.href;
    if (href) {
      matches = href.match(pattern);
    } else {
      return void 0;
    }
    if (!(matches != null) || matches.length === 0) {
      return void 0;
    } else {
      return matches[1];
    }
  };

  findMilestoneName = function() {
    return $(milestoneNameSelector).text();
  };

  findTicketDescription = function() {
    ticketidtext = $(ticketIdSelector).text();
    ticketidtext2 = ticketidtext.replace("Ticket ","");
    ticketid = ticketidtext2.replace(" ","");
    return ticketid + ': ' + $(ticketNameSelector).text();
  };

  findIds = function() {
    var boardIdPattern, cardIdPattern, data;
    boardIdPattern = /^https:\/\/\S+.codebasehq.com\/projects\/([a-zA-Z0-9-]+)\/\S+\/\d+$/;
    cardIdPattern = /^https:\/\/\S+.codebasehq.com\/projects\/[a-zA-Z0-9-]+\/\S+\/(\d+)$/;
    return data = {
      'project': {
        'id': findMatch(boardIdPattern),
        'name': findMilestoneName()
      },
      'item': {
        'id': findMatch(cardIdPattern),
        'name': findTicketDescription()
      }
    };
  };

  addButton = function(element, data) {
    data['element'] = element;
    return sendMessage({
      'type': 'timers:request',
      'data': 'data',
      data: data
    });
  };

  setupButton = function() {
    var data, icon, timer, title;
    data = findIds();
    var imgURL = chrome.extension.getURL("images/time.png");
    // document.getElementById("someImage").src = imgURL;
    icon = $('<span></span>')
      .addClass('i')
      .addClass('time')
      .addClass('page-button__icon')
      .css('background-image', 'url(' + imgURL + ')')
      .css('background-repeat', 'no-repeat');
    title = " Track Time";
    timer = $("<a></a>")
      .addClass('harvest-timer')
      .addClass('btn')
      .addClass('page-button')
      .addClass('js-add-trello-timer')
      .attr('data-project', JSON.stringify(data.project))
      .attr('data-item', JSON.stringify(data.item)).append(icon).append(title)
      .css('color', '#777')
      .css('cursor', 'pointer');
    $(actionSelector).children().first().after(timer);
    return addButton(timer, data);
  };

  setupButton();

  $('body.full .harvest-timer').remove();

  loadConfig();

  setInterval(function() {
    var cardPattern, href;
    cardPattern = /^https:\/\/\S+.codebasehq.com\/projects\/[a-zA-Z0-9-]+\/tickets\/[0-9]+$/;
    href = window.location.href;
    if (href.match(cardPattern) !== null && href.match('/report=all/gi') === null) {
      if ($(".harvest-timer").length === 0) {
        return setupButton();
      }
    }
  }, 250);

}).call(this);
